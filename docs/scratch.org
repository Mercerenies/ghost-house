
* SPECIAL FURNITURE PLACEMENT
  To determine if we can put furniture at a given position.

  1. If there's already a player / entity there, obviously the answer
     is no.
  2. Otherwise, make a list of all adjacent (and corner-adjacent)
     cells to the potential placement.
  3. Traverse all of these cells in clockwise order. You should find
     at most one contiguous segment of "unblocked" cells and at most
     one contiguous segment of "blocked" cells. If so, yes. If not,
     no.

  Note: "blocked" is defined as being either a wall or occupied by an
  entity of any kind. "unblocked", of course, means not blocked.
* FURNITURE TYPES
** SPECIAL FURNITURE
   + [X] Twin Bed
   + [X] King Bed
   + [X] Shower
   + [X] Bathtub
   + [X] Dining Table
   + [X] (Circular) Dining Table
   + [X] Mirror
   + [X] Automobile
** EDGE FURNITURE
   + [X] Bench
   + [X] Bookshelf
     - [X] "Flying books" mode
   + [X] Cardboard Box
     - [X] Interaction: Items
   + [ ] Desk
   + [X] Toilet
   + [X] Cabinet
     - [X] Interaction: Items
   + [X] Wardrobe
     - [X] Interaction: Items
   + [X] Coffee Table
   + [X] Lamp
     - [X] Interaction: Turn on / off
   + [X] Kitchen Sink
     - [X] Kitchen Counter Shim
     - [X] Interaction: Items
   + [X] Kitchen Counter
     - [X] Kitchen Counter Shim
     - [X] Interaction: Items
   + [X] Bathroom Sink
     - [X] Bathroom Counter Shim
     - [X] Interaction: Items
   + [X] Bathroom Counter
     - [X] Bathroom Counter Shim
     - [X] Interaction: Items
   + [X] Washing Machine
     - [X] "Sliding furniture" mode
     - [X] Interaction: Items
   + [X] Dryer
     - [X] "Sliding furniture" mode
     - [X] Interaction: Items
   + [X] Television
   + [X] Recliner
     - [X] "Flying furniture" mode
   + [X] Sofa
   + [X] Dining Chair
     - [X] "Flying furniture" mode
   + [X] Office Chair
     - [X] "Flying furniture" mode
   + [X] Dresser
     - [X] Interaction: Items
   + [X] Stove
     - [X] Kitchen Counter Shim
     - [X] Interaction: Items
   + [X] Dishwasher
     - [X] Kitchen Counter Shim
     - [X] Interaction: Items
   + [X] Torch
   + [X] Clothes Rack
     - [X] "Flying clothes" mode
     - [X] Interaction: Items
   + [X] Workbench
     - [X] Interaction: Items
   + [X] Laundry Basket
     - [X] "Flying clothes" mode
     - [X] Interaction: Items
* ROOM TYPES
  + [X] Hallway
    + [X] Edge
  + [-] Bedroom
    + [X] Edge
    + [X] Basic Layout
    + [ ] Refined Layout
    + [ ] Rugs
  + [-] MasterBedroom
    + [X] Edge
    + [ ] Basic Layout
    + [ ] Refined Layout
    + [ ] Rugs
  + [-] Bathroom
    + [X] Edge
    + [X] Basic Layout
    + [ ] Refined Layout
    + [ ] Rugs
  + [-] Washroom
    + [X] Edge
    + [X] Basic Layout
    + [X] Refined Layout
    + [ ] Rugs
  + [-] Wardrobe Room
    + [X] Edge
    + [X] Basic Layout
    + [ ] Refined Layout
    + [ ] Rugs
  + [-] Closet
    + [X] Edge
    + [ ] Rugs
  + [-] Long Closet
    + [X] Edge
    + [ ] Rugs
  + [ ] Theater
    + [ ] Edge
    + [ ] Basic Layout
    + [ ] Refined Layout
    + [ ] Rugs
  + [ ] Foyer
    + [ ] Edge
    + [ ] Basic Layout
    + [ ] Refined Layout
    + [ ] Rugs
  + [-] Study
    + [X] Edge
    + [X] Basic Layout
    + [X] Refined Layout
    + [ ] Rugs
  + [-] Sitting Room
    + [X] Edge
    + [X] Basic Layout
    + [ ] Refined Layout
    + [ ] Rugs
  + [-] Laundry Room
    + [X] Edge
    + [X] Basic Layout
    + [X] Refined Layout
    + [ ] Rugs
  + [-] Kitchen
    + [X] Edge
    + [X] Basic Layout
    + [ ] Refined Layout
    + [ ] Rugs
  + [X] Storage Room
    + [X] Edge
    + [X] Basic Layout
    + [X] Refined Layout
  + [-] Dining Room
    + [X] Edge
    + [X] Basic Layout
    + [ ] Refined Layout
    + [ ] Rugs
  + [-] Dining Hall
    + [X] Edge
    + [X] Basic Layout
    + [ ] Refined Layout
    + [ ] Rugs
  + [-] Garage
    + [X] Edge
    + [X] Basic Layout
    + [ ] Refined Layout
    + [ ] Rugs
    + [ ] Parking Spots
* STATUS EFFECTS
  + [X] Debug Effect (No in-game effect; for testing)
  + [X] Slowed (Can't sprint)
  + [X] Tired (Sprint meter refills slower)
  + [X] Hyper (Sprint meter refills faster)
  + [X] Blinded (Dark areas of map are darker)
  + [X] Night Vision (Dark areas of map are lighter)
  + [X] Darkness (Dark areas of the map are 100% dark)
  + [X] Perfect Vision (Dark areas of the map are 100% lit)
  + [X] Invincible (Cannot take damage)
* ITEMS
  + [X] Debug Item (No in-game effect; for testing)
  + [X] Potion (Grants status effect)
  + [ ] Elixir (Cures all status effects; possibly ignores some that
    are marked specially)
  + [ ] Flash Bomb (Eliminates any enemies within a particular radius)
* THOUGHTS
** "Evil" Rooms
   + Some rooms (very small probability) will randomly just have all
     of the furniture be evil and maybe have more bad guys too.
** More Exciting "Evil" Effects
   + Vanishing Furniture that can attack on inspection is cool and
     all, but some other stuff may be neat.
     - [X] Chairs that get up and throw themselves at you when you pass.
     - [X] Bookshelves that spawn books to fly at you.
     - [X] Fairies that emit light and "hide" in furniture.
     - [X] Washers and dryers fling themselves at you.
     - [X] Clothing Racks that have haunted clothes which chase you.
** DONE Shadow Players
  + Appears randomly several steps behind the player, mocks the
    player's movements at a relatively slow fixed rate in an attempt
    to catch up to them. Deals damage and disappears on contact, or
    after a certain amount of time.
** DONE Running into the Wall
   Minor bug with the player running. If holding the run button, the
   player continues to consume stamina even if facing a wall or other
   impassible object. Need to fix this.
** Stuff on Tabletops
   Surfaces like dining tables or dressers may be able to contain
   things. Generally for decoration purposes, but these things may
   also produce light.

   Possible "things" to be on surfaces
   + [ ] Torches
   + [ ] Lamps
   + [ ] Books
** The Leprechaun
   So not an actual enemy. Just a persistent background object that
   runs around to different rooms doing fun stuff when the player's
   viewport leaves the room.
   + Opening and closing all boxes in the room
   + Filling or emptying all laundry baskets in the room
   + Flipping all chairs to face the opposite way
   + Flipping all chairs upside down
   + Changing the designs of the rugs
** DONE Coherence
   If matching counters or sinks are next to each other, consider
   having them change images to look like they're part of a larger
   piece.
   + Note: Probably not if they're vanishing though.
   + Done for kitchens / bathroom / washroom
** Visuals
   Some brief video animations to play on the television and
   (eventually) projector screen.
** DONE Book Behavior
   Flying books may want to run away from the flashlight too, like
   flying clothes. Not to a hiding place but... just away.
** Occupational Ghosts
   Ghosts that spawn (maybe as ambients, maybe next to furniture) in
   specific rooms.
   + A chef in kitchens who throws knives at you.
   + A butler in dining rooms / halls who throws something at you.
   + A maid in the wardrobe room or laundry room who throws something
     at you.
   + A lady of the house in the bedroom or wardrobe room who throws
     something at you.
** Black Cat
   No haunted house is complete without one. Ambient. Appears in the
   corner of the screen and wanders around. Relatively harmless and
   runs away from the player. If cornered may attack.
** Interactions
   In the spirit of streamlining things and making the game not
   constantly pause for dialogue, I want to minimize the number of
   times furniture will freeze the game when examining. I'll leave in
   the generic descriptions, as we might still use them later (with a
   different action button). But I'll be changing on_interact for lots
   of types of furniture.
   + [ ] Twin Bed
   + [ ] King Bed
   + [ ] Shower
   + [ ] Bathtub
   + [ ] Dining Table
   + [ ] (Circular) Dining Table
   + [ ] Mirror
   + [ ] Automobile
   + [ ] Bench
   + [ ] Bookshelf
   + [X] Cardboard Box
   + [ ] Toilet
   + [X] Cabinet
   + [X] Wardrobe
   + [ ] Coffee Table
   + [X] Lamp
   + [X] Kitchen Sink
   + [X] Kitchen Counter
   + [X] Bathroom Sink
   + [X] Bathroom Counter
   + [-] Washing Machine
     - [X] Items
     - [ ] ???
   + [-] Dryer
     - [X] Items
     - [ ] ???
   + [ ] Television
   + [ ] Recliner
   + [ ] Sofa
   + [ ] Dining Chair
   + [ ] Office Chair
   + [X] Dresser
   + [-] Stove
     - [X] Items
     - [ ] ???
   + [-] Dishwasher
     - [X] Items
     - [ ] ???
   + [X] Clothes Rack
   + [-] Workbench
     - [X] Items
     - [ ] ???
   + [-] Laundry Basket
     - [X] Items
     - [ ] ???
   TODO: We still need to do the tags fully. I'm just putting generic
   ones in there right now. I'll fill them out fully when there's more
   items to distinguish between.
** Resizeable Window
   TODO: Handle this correctly. At the moment, I just disabled
   resizing the window. I want the game to, I don't know, stretch,
   maybe? We'll see.
** Fade in on Fairies
   Fairies just kind of... pop up right now. Maybe have the light fade
   in. We can definitely to alpha-transparent light, as vanishing
   lamps do it already.
* DONE LIGHTING REVAMP
  1. [X] Disable the old lighting system
  2. [X] Individual nodes for different types of lighting
  3. [X] Torches to use new lighting
  4. [X] All other furniture to new lighting
  5. [X] Fairies to new lighting
  6. [X] The player to new lighting
  7. [X] Status effects on the new DarkBox
  8. [X] Remove all of the unused nodes
  9. [X] Remove old lighting functions
* LOCKS AND KEYS
** Plan
   1. [X] Update JSON format for locked doors
   2. [X] Move generator stages into a new folder
   3. [X] Move generator helper files into ~Generator/~ folder
   4. [X] Make the connection informal interface into an actual class
      - [X] Define the class
      - [X] Update existing stages to work with the class
      - [X] Update the minimap to work with the class
   5. [ ] Locked door object (non-furniture ~StaticEntity~ with custom
      interaction)
   6. [ ] Locked door generator stage after properties generator
      - [ ] Define generator class
      - [ ] Find cut edges
      - [ ] Determine score using the various heuristics below
      - [ ] Weighted random selection to determine where to put the
        locks
      - [ ] Repeat the entire process for multiple locks (?)
      - [ ] Actualizing generator needs to actualize the locks
   7. [ ] Keys
      - [ ] Key inventory stat
      - [ ] Ability to unlock doors by interacting with them when you
        have a key
      - [ ] Animation for the unlocking step
      - [ ] Default behavior of locked door interaction is to show a
        generic message about keys
      - [ ] ~Collectible~ subclass for keys (with a flag for minimap
        interaction)
      - [ ] Corresponding animation for the ~Collectible~
      - [ ] If the minimap flag is set, the key should remove its icon
        from the minimap on collection
   8. [ ] Key generator stage after edge furniture generator
      - [ ] Define generator class
      - [ ] DFS or BFS to determine valid rooms in which to place keys
      - [ ] Attempt to place appropriate number of keys in compatible
        furniture
      - [ ] If placement fails, delete a lock and retry
      - [ ] Place the generated keys on the minimap in the appropriate
        places
** Lock Placement
  + [ ] Heuristics (minimum 1 point always)
    - [ ] +10 automatically
    - [ ] +20 for being a cut edge
    - [ ] +10 for being a closet edge (defined, here, as an edge which
      isolates a room from the rest of the mansion)
    - [ ] -30 for being a duplicate edge
